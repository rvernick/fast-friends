/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
* primary: #663399, secondary: #665a6f, tertiary: #805158
*/
export const Colors = {
  "light": {
    "primary": "rgb(0, 0, 0)",
    "onPrimary": "rgb(255, 255, 255)",
    "primaryContainer": "rgb(233, 233, 233)",
    "onPrimaryContainer": "rgb(0, 0, 0)",
    "secondary": "rgb(97, 97, 97)",
    "onSecondary": "rgb(255, 255, 255)",
    "secondaryContainer": "rgb(208, 208, 208)",
    "onSecondaryContainer": "rgb(30, 30, 39)",
    "tertiary": "rgb(92, 91, 92)",
    "onTertiary": "rgb(255, 255, 255)",
    "tertiaryContainer": "rgb(223, 223, 223)",
    "onTertiaryContainer": "rgb(24, 24, 24)",
    "error": "rgb(186, 26, 26)",
    "onError": "rgb(255, 255, 255)",
    "errorContainer": "rgb(255, 218, 214)",
    "onErrorContainer": "rgb(65, 0, 2)",
    "background": "rgb(251, 252, 254)",
    "onBackground": "rgb(25, 28, 30)",
    "surface": "rgb(251, 252, 254)",
    "onSurface": "rgb(25, 28, 30)",
    "surfaceVariant": "rgb(228, 228, 228)",
    "onSurfaceVariant": "rgb(64, 72, 76)",
    "outline": "rgb(112, 120, 125)",
    "outlineVariant": "rgb(192, 200, 205)",
    "shadow": "rgb(0, 0, 0)",
    "scrim": "rgb(0, 0, 0)",
    "inverseSurface": "rgb(46, 49, 50)",
    "inverseOnSurface": "rgb(241, 241, 241)",
    "inversePrimary": "rgb(211, 211, 211)",
    "elevation": {
      "level0": "transparent",
      "level1": "rgb(238, 245, 248)",
      "level2": "rgb(231, 240, 244)",
      "level3": "rgb(223, 236, 241)",
      "level4": "rgb(221, 234, 239)",
      "level5": "rgb(216, 231, 237)"
    },
    "surfaceDisabled": "rgba(25, 28, 30, 0.12)",
    "onSurfaceDisabled": "rgba(25, 28, 30, 0.38)",
    "backdrop": "rgba(42, 50, 53, 0.4)"
  },
  "dark": {
    "primary": "rgb(99, 211, 255)",
    "onPrimary": "rgb(0, 53, 69)",
    "primaryContainer": "rgb(0, 77, 99)",
    "onPrimaryContainer": "rgb(188, 233, 255)",
    "secondary": "rgb(180, 202, 213)",
    "onSecondary": "rgb(30, 51, 60)",
    "secondaryContainer": "rgb(53, 74, 83)",
    "onSecondaryContainer": "rgb(208, 230, 242)",
    "tertiary": "rgb(197, 194, 234)",
    "onTertiary": "rgb(46, 45, 77)",
    "tertiaryContainer": "rgb(69, 67, 100)",
    "onTertiaryContainer": "rgb(226, 223, 255)",
    "error": "rgb(255, 180, 171)",
    "onError": "rgb(105, 0, 5)",
    "errorContainer": "rgb(147, 0, 10)",
    "onErrorContainer": "rgb(255, 180, 171)",
    "background": "rgb(25, 28, 30)",
    "onBackground": "rgb(225, 226, 228)",
    "surface": "rgb(25, 28, 30)",
    "onSurface": "rgb(225, 226, 228)",
    "surfaceVariant": "rgb(64, 72, 76)",
    "onSurfaceVariant": "rgb(192, 200, 205)",
    "outline": "rgb(138, 146, 151)",
    "outlineVariant": "rgb(64, 72, 76)",
    "shadow": "rgb(0, 0, 0)",
    "scrim": "rgb(0, 0, 0)",
    "inverseSurface": "rgb(225, 226, 228)",
    "inverseOnSurface": "rgb(46, 49, 50)",
    "inversePrimary": "rgb(0, 103, 131)",
    "elevation": {
      "level0": "transparent",
      "level1": "rgb(29, 37, 41)",
      "level2": "rgb(31, 43, 48)",
      "level3": "rgb(33, 48, 55)",
      "level4": "rgb(34, 50, 57)",
      "level5": "rgb(35, 54, 62)"
    },
    "surfaceDisabled": "rgba(225, 226, 228, 0.12)",
    "onSurfaceDisabled": "rgba(225, 226, 228, 0.38)",
    "backdrop": "rgba(42, 50, 53, 0.4)"
  }
}