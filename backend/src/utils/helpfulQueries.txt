delete from batch_process
where id > 0
;

update maintenance_item
set was_notified = FALSE
where "bikeId" = 20
and was_notified = TRUE
;

select * from maintenance_item
where was_notified = true;


update maintenance_item
set was_notified = FALSE
where was_notified = TRUE
;

select mh.*, mi.*, b.*
from maintenance_history mh
INNER JOIN maintenance_item mi on mh.maintenance_item_id = mi.id
INNER JOIN bike b on b.id = mi."bikeId"
WHERE mh.id = 12
;

select usr.id, bike.name, bike.id, bike.name, bike."stravaId"
from  public.user usr
INNER JOIN bike bike on usr.id = bike."userId"
where
usr.username = 'ts@t.com'
and bike."deletedOn" is NULL
;

select bike.name, mi.part, mi.action, 
  bike."odometerMeters"/1609 as mileage, mi.due_distance_meters/1609 as Due, 
  mi.due_date, bike.id as bid, usr.id, bike.is_retired
from maintenance_item mi
INNER JOIN bike bike on mi."bikeId" = bike.id
INNER JOIN public.user usr on bike."userId" = usr.id
where
usr.username = 'rvernick@yahoo.com'
and bike.is_retired = FALSE
and bike."deletedOn" IS NULL
order by bike.id, mi.due_distance_meters ASC
;

select bd.brand, bd.model, bd.line, bd.groupset_line, bc.part, bc.brand, bc.model, bc.line
from bike_component bc
INNER JOIN bike_definition bd on bd.id = bc.bike_definition_id
WHERE
bd.brand = 'Giant'
ORDER BY
bd.brand, bd.model, bd.line
;

delete from bike_component
where id in (
  select bc.id
  from bike_component bc
  inner join bike_definition bd on bd.id = bc.bike_definition_id
  where bd.brand = 'Giant'  
)
;

delete from bike_definition
where brand = 'Giant'
;